---
import type { GetStaticPaths } from "astro";
// astro tools
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

// components
import PostCard from "@/components/ui/PostCard.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import Heading from "@/components/ui/Heading.astro";

//assets
import profileImg from "@/assets/profile.png";
import Link from "@/components/ui/Link.astro";


//data
// Get one post
// const postEntry = await getEntry("posts", "bring-out-your-inner-artist");
// Get all posts
// const allPosts = await getCollection("posts",
//     ({data}) => !data.isDraft);


export const getStaticPaths = (async({paginate}) => {
    const allPosts = await getCollection("posts",
    ({data}) => !data.isDraft);

    return paginate(
        allPosts.sort(
            (a,b) => 
            new Date(b.data.pubDate).getUTCDate() - 
            new Date(a.data.pubDate).getUTCDate()
        ), {
        pageSize: 2
    })
}) satisfies GetStaticPaths;

const { page } = Astro.props;
---

<BaseLayout title=`Blog | Page ${page.currentPage}`>
    <section aria-label="Blog Posts">
        <div class="blog-wrapper">
            <div class="columns">
                <Image src={profileImg} 
                alt="Profile image" 
                class="avatar"
                width={140} 
                height={140}
                />
                <div class="rows">
                    <div class="columns">
                        <Heading tagName="h1" size="h2">
                            My Blog
                        </Heading>
                        <p class="uppercase text-accent">
                            <strong>
                                Page {page.currentPage}
                            </strong>
                        </p>
                    </div>
                    <p>I like to write about productivity QA and
                        best practices for software development.</p>
                </div>
            </div>
            <div class="grid-wrapper">
                {page.data.map((p)=> <PostCard post={p}/>)}
            </div>
            <div class="pagination">
                {page.url.prev && (
                    <Link href={page.url.prev} variant="badge">Previous</Link>
                )}
                {page.url.next && (
                    <Link href={page.url.next} variant="badge">Next</Link>
                )}
            </div>
        </div>
    </section>


</BaseLayout>